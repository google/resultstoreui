// source: test_suite.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* tslint:disable */
/* eslint-disable */

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var file_pb = require('./file_pb.js');
goog.object.extend(proto, file_pb);
goog.exportSymbol('proto.resultstoresearch.v1.Test', null, global);
goog.exportSymbol('proto.resultstoresearch.v1.Test.TestTypeCase', null, global);
goog.exportSymbol('proto.resultstoresearch.v1.TestCase', null, global);
goog.exportSymbol('proto.resultstoresearch.v1.TestCase.Result', null, global);
goog.exportSymbol('proto.resultstoresearch.v1.TestError', null, global);
goog.exportSymbol('proto.resultstoresearch.v1.TestFailure', null, global);
goog.exportSymbol('proto.resultstoresearch.v1.TestSuite', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resultstoresearch.v1.TestSuite = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.resultstoresearch.v1.TestSuite.repeatedFields_, null);
};
goog.inherits(proto.resultstoresearch.v1.TestSuite, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resultstoresearch.v1.TestSuite.displayName = 'proto.resultstoresearch.v1.TestSuite';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resultstoresearch.v1.Test = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.resultstoresearch.v1.Test.oneofGroups_);
};
goog.inherits(proto.resultstoresearch.v1.Test, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resultstoresearch.v1.Test.displayName = 'proto.resultstoresearch.v1.Test';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resultstoresearch.v1.TestCase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.resultstoresearch.v1.TestCase.repeatedFields_, null);
};
goog.inherits(proto.resultstoresearch.v1.TestCase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resultstoresearch.v1.TestCase.displayName = 'proto.resultstoresearch.v1.TestCase';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resultstoresearch.v1.TestFailure = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.resultstoresearch.v1.TestFailure.repeatedFields_, null);
};
goog.inherits(proto.resultstoresearch.v1.TestFailure, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resultstoresearch.v1.TestFailure.displayName = 'proto.resultstoresearch.v1.TestFailure';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.resultstoresearch.v1.TestError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.resultstoresearch.v1.TestError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.resultstoresearch.v1.TestError.displayName = 'proto.resultstoresearch.v1.TestError';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.resultstoresearch.v1.TestSuite.repeatedFields_ = [2,3,4,7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resultstoresearch.v1.TestSuite.prototype.toObject = function(opt_includeInstance) {
  return proto.resultstoresearch.v1.TestSuite.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resultstoresearch.v1.TestSuite} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestSuite.toObject = function(includeInstance, msg) {
  var f, obj = {
    suiteName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    testsList: jspb.Message.toObjectList(msg.getTestsList(),
    proto.resultstoresearch.v1.Test.toObject, includeInstance),
    failuresList: jspb.Message.toObjectList(msg.getFailuresList(),
    proto.resultstoresearch.v1.TestFailure.toObject, includeInstance),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.resultstoresearch.v1.TestError.toObject, includeInstance),
    timing: (f = msg.getTiming()) && common_pb.Timing.toObject(includeInstance, f),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    common_pb.Property.toObject, includeInstance),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    file_pb.File.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resultstoresearch.v1.TestSuite}
 */
proto.resultstoresearch.v1.TestSuite.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resultstoresearch.v1.TestSuite;
  return proto.resultstoresearch.v1.TestSuite.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resultstoresearch.v1.TestSuite} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resultstoresearch.v1.TestSuite}
 */
proto.resultstoresearch.v1.TestSuite.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSuiteName(value);
      break;
    case 2:
      var value = new proto.resultstoresearch.v1.Test;
      reader.readMessage(value,proto.resultstoresearch.v1.Test.deserializeBinaryFromReader);
      msg.addTests(value);
      break;
    case 3:
      var value = new proto.resultstoresearch.v1.TestFailure;
      reader.readMessage(value,proto.resultstoresearch.v1.TestFailure.deserializeBinaryFromReader);
      msg.addFailures(value);
      break;
    case 4:
      var value = new proto.resultstoresearch.v1.TestError;
      reader.readMessage(value,proto.resultstoresearch.v1.TestError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 6:
      var value = new common_pb.Timing;
      reader.readMessage(value,common_pb.Timing.deserializeBinaryFromReader);
      msg.setTiming(value);
      break;
    case 7:
      var value = new common_pb.Property;
      reader.readMessage(value,common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 8:
      var value = new file_pb.File;
      reader.readMessage(value,file_pb.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resultstoresearch.v1.TestSuite.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resultstoresearch.v1.TestSuite.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resultstoresearch.v1.TestSuite} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestSuite.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuiteName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.resultstoresearch.v1.Test.serializeBinaryToWriter
    );
  }
  f = message.getFailuresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.resultstoresearch.v1.TestFailure.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.resultstoresearch.v1.TestError.serializeBinaryToWriter
    );
  }
  f = message.getTiming();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.Timing.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      common_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      file_pb.File.serializeBinaryToWriter
    );
  }
};


/**
 * optional string suite_name = 1;
 * @return {string}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getSuiteName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.setSuiteName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated Test tests = 2;
 * @return {!Array<!proto.resultstoresearch.v1.Test>}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getTestsList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.Test>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.resultstoresearch.v1.Test, 2));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.Test>} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
*/
proto.resultstoresearch.v1.TestSuite.prototype.setTestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.resultstoresearch.v1.Test=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.Test}
 */
proto.resultstoresearch.v1.TestSuite.prototype.addTests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.resultstoresearch.v1.Test, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.clearTestsList = function() {
  return this.setTestsList([]);
};


/**
 * repeated TestFailure failures = 3;
 * @return {!Array<!proto.resultstoresearch.v1.TestFailure>}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getFailuresList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.TestFailure>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.resultstoresearch.v1.TestFailure, 3));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.TestFailure>} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
*/
proto.resultstoresearch.v1.TestSuite.prototype.setFailuresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.resultstoresearch.v1.TestFailure=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.TestFailure}
 */
proto.resultstoresearch.v1.TestSuite.prototype.addFailures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.resultstoresearch.v1.TestFailure, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.clearFailuresList = function() {
  return this.setFailuresList([]);
};


/**
 * repeated TestError errors = 4;
 * @return {!Array<!proto.resultstoresearch.v1.TestError>}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.TestError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.resultstoresearch.v1.TestError, 4));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.TestError>} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
*/
proto.resultstoresearch.v1.TestSuite.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.resultstoresearch.v1.TestError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.TestError}
 */
proto.resultstoresearch.v1.TestSuite.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.resultstoresearch.v1.TestError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional Timing timing = 6;
 * @return {?proto.resultstoresearch.v1.Timing}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getTiming = function() {
  return /** @type{?proto.resultstoresearch.v1.Timing} */ (
    jspb.Message.getWrapperField(this, common_pb.Timing, 6));
};


/**
 * @param {?proto.resultstoresearch.v1.Timing|undefined} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
*/
proto.resultstoresearch.v1.TestSuite.prototype.setTiming = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.clearTiming = function() {
  return this.setTiming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resultstoresearch.v1.TestSuite.prototype.hasTiming = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated Property properties = 7;
 * @return {!Array<!proto.resultstoresearch.v1.Property>}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Property, 7));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.Property>} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
*/
proto.resultstoresearch.v1.TestSuite.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.resultstoresearch.v1.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.Property}
 */
proto.resultstoresearch.v1.TestSuite.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.resultstoresearch.v1.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * repeated File files = 8;
 * @return {!Array<!proto.resultstoresearch.v1.File>}
 */
proto.resultstoresearch.v1.TestSuite.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, file_pb.File, 8));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.File>} value
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
*/
proto.resultstoresearch.v1.TestSuite.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.resultstoresearch.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.File}
 */
proto.resultstoresearch.v1.TestSuite.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.resultstoresearch.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestSuite} returns this
 */
proto.resultstoresearch.v1.TestSuite.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.resultstoresearch.v1.Test.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.resultstoresearch.v1.Test.TestTypeCase = {
  TEST_TYPE_NOT_SET: 0,
  TEST_CASE: 1,
  TEST_SUITE: 2
};

/**
 * @return {proto.resultstoresearch.v1.Test.TestTypeCase}
 */
proto.resultstoresearch.v1.Test.prototype.getTestTypeCase = function() {
  return /** @type {proto.resultstoresearch.v1.Test.TestTypeCase} */(jspb.Message.computeOneofCase(this, proto.resultstoresearch.v1.Test.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resultstoresearch.v1.Test.prototype.toObject = function(opt_includeInstance) {
  return proto.resultstoresearch.v1.Test.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resultstoresearch.v1.Test} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.Test.toObject = function(includeInstance, msg) {
  var f, obj = {
    testCase: (f = msg.getTestCase()) && proto.resultstoresearch.v1.TestCase.toObject(includeInstance, f),
    testSuite: (f = msg.getTestSuite()) && proto.resultstoresearch.v1.TestSuite.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resultstoresearch.v1.Test}
 */
proto.resultstoresearch.v1.Test.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resultstoresearch.v1.Test;
  return proto.resultstoresearch.v1.Test.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resultstoresearch.v1.Test} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resultstoresearch.v1.Test}
 */
proto.resultstoresearch.v1.Test.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.resultstoresearch.v1.TestCase;
      reader.readMessage(value,proto.resultstoresearch.v1.TestCase.deserializeBinaryFromReader);
      msg.setTestCase(value);
      break;
    case 2:
      var value = new proto.resultstoresearch.v1.TestSuite;
      reader.readMessage(value,proto.resultstoresearch.v1.TestSuite.deserializeBinaryFromReader);
      msg.setTestSuite(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resultstoresearch.v1.Test.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resultstoresearch.v1.Test.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resultstoresearch.v1.Test} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.Test.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTestCase();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.resultstoresearch.v1.TestCase.serializeBinaryToWriter
    );
  }
  f = message.getTestSuite();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.resultstoresearch.v1.TestSuite.serializeBinaryToWriter
    );
  }
};


/**
 * optional TestCase test_case = 1;
 * @return {?proto.resultstoresearch.v1.TestCase}
 */
proto.resultstoresearch.v1.Test.prototype.getTestCase = function() {
  return /** @type{?proto.resultstoresearch.v1.TestCase} */ (
    jspb.Message.getWrapperField(this, proto.resultstoresearch.v1.TestCase, 1));
};


/**
 * @param {?proto.resultstoresearch.v1.TestCase|undefined} value
 * @return {!proto.resultstoresearch.v1.Test} returns this
*/
proto.resultstoresearch.v1.Test.prototype.setTestCase = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.resultstoresearch.v1.Test.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resultstoresearch.v1.Test} returns this
 */
proto.resultstoresearch.v1.Test.prototype.clearTestCase = function() {
  return this.setTestCase(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resultstoresearch.v1.Test.prototype.hasTestCase = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional TestSuite test_suite = 2;
 * @return {?proto.resultstoresearch.v1.TestSuite}
 */
proto.resultstoresearch.v1.Test.prototype.getTestSuite = function() {
  return /** @type{?proto.resultstoresearch.v1.TestSuite} */ (
    jspb.Message.getWrapperField(this, proto.resultstoresearch.v1.TestSuite, 2));
};


/**
 * @param {?proto.resultstoresearch.v1.TestSuite|undefined} value
 * @return {!proto.resultstoresearch.v1.Test} returns this
*/
proto.resultstoresearch.v1.Test.prototype.setTestSuite = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.resultstoresearch.v1.Test.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resultstoresearch.v1.Test} returns this
 */
proto.resultstoresearch.v1.Test.prototype.clearTestSuite = function() {
  return this.setTestSuite(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resultstoresearch.v1.Test.prototype.hasTestSuite = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.resultstoresearch.v1.TestCase.repeatedFields_ = [4,5,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resultstoresearch.v1.TestCase.prototype.toObject = function(opt_includeInstance) {
  return proto.resultstoresearch.v1.TestCase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resultstoresearch.v1.TestCase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestCase.toObject = function(includeInstance, msg) {
  var f, obj = {
    caseName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    className: jspb.Message.getFieldWithDefault(msg, 2, ""),
    result: jspb.Message.getFieldWithDefault(msg, 3, 0),
    failuresList: jspb.Message.toObjectList(msg.getFailuresList(),
    proto.resultstoresearch.v1.TestFailure.toObject, includeInstance),
    errorsList: jspb.Message.toObjectList(msg.getErrorsList(),
    proto.resultstoresearch.v1.TestError.toObject, includeInstance),
    timing: (f = msg.getTiming()) && common_pb.Timing.toObject(includeInstance, f),
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    common_pb.Property.toObject, includeInstance),
    filesList: jspb.Message.toObjectList(msg.getFilesList(),
    file_pb.File.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resultstoresearch.v1.TestCase}
 */
proto.resultstoresearch.v1.TestCase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resultstoresearch.v1.TestCase;
  return proto.resultstoresearch.v1.TestCase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resultstoresearch.v1.TestCase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resultstoresearch.v1.TestCase}
 */
proto.resultstoresearch.v1.TestCase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaseName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClassName(value);
      break;
    case 3:
      var value = /** @type {!proto.resultstoresearch.v1.TestCase.Result} */ (reader.readEnum());
      msg.setResult(value);
      break;
    case 4:
      var value = new proto.resultstoresearch.v1.TestFailure;
      reader.readMessage(value,proto.resultstoresearch.v1.TestFailure.deserializeBinaryFromReader);
      msg.addFailures(value);
      break;
    case 5:
      var value = new proto.resultstoresearch.v1.TestError;
      reader.readMessage(value,proto.resultstoresearch.v1.TestError.deserializeBinaryFromReader);
      msg.addErrors(value);
      break;
    case 7:
      var value = new common_pb.Timing;
      reader.readMessage(value,common_pb.Timing.deserializeBinaryFromReader);
      msg.setTiming(value);
      break;
    case 8:
      var value = new common_pb.Property;
      reader.readMessage(value,common_pb.Property.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 9:
      var value = new file_pb.File;
      reader.readMessage(value,file_pb.File.deserializeBinaryFromReader);
      msg.addFiles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resultstoresearch.v1.TestCase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resultstoresearch.v1.TestCase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resultstoresearch.v1.TestCase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestCase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCaseName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClassName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getResult();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getFailuresList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.resultstoresearch.v1.TestFailure.serializeBinaryToWriter
    );
  }
  f = message.getErrorsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.resultstoresearch.v1.TestError.serializeBinaryToWriter
    );
  }
  f = message.getTiming();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.Timing.serializeBinaryToWriter
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      common_pb.Property.serializeBinaryToWriter
    );
  }
  f = message.getFilesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      file_pb.File.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.resultstoresearch.v1.TestCase.Result = {
  RESULT_UNSPECIFIED: 0,
  COMPLETED: 1,
  INTERRUPTED: 2,
  CANCELLED: 3,
  FILTERED: 4,
  SKIPPED: 5,
  SUPPRESSED: 6
};

/**
 * optional string case_name = 1;
 * @return {string}
 */
proto.resultstoresearch.v1.TestCase.prototype.getCaseName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.setCaseName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string class_name = 2;
 * @return {string}
 */
proto.resultstoresearch.v1.TestCase.prototype.getClassName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.setClassName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Result result = 3;
 * @return {!proto.resultstoresearch.v1.TestCase.Result}
 */
proto.resultstoresearch.v1.TestCase.prototype.getResult = function() {
  return /** @type {!proto.resultstoresearch.v1.TestCase.Result} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.resultstoresearch.v1.TestCase.Result} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.setResult = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated TestFailure failures = 4;
 * @return {!Array<!proto.resultstoresearch.v1.TestFailure>}
 */
proto.resultstoresearch.v1.TestCase.prototype.getFailuresList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.TestFailure>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.resultstoresearch.v1.TestFailure, 4));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.TestFailure>} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
*/
proto.resultstoresearch.v1.TestCase.prototype.setFailuresList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.resultstoresearch.v1.TestFailure=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.TestFailure}
 */
proto.resultstoresearch.v1.TestCase.prototype.addFailures = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.resultstoresearch.v1.TestFailure, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.clearFailuresList = function() {
  return this.setFailuresList([]);
};


/**
 * repeated TestError errors = 5;
 * @return {!Array<!proto.resultstoresearch.v1.TestError>}
 */
proto.resultstoresearch.v1.TestCase.prototype.getErrorsList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.TestError>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.resultstoresearch.v1.TestError, 5));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.TestError>} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
*/
proto.resultstoresearch.v1.TestCase.prototype.setErrorsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.resultstoresearch.v1.TestError=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.TestError}
 */
proto.resultstoresearch.v1.TestCase.prototype.addErrors = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.resultstoresearch.v1.TestError, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.clearErrorsList = function() {
  return this.setErrorsList([]);
};


/**
 * optional Timing timing = 7;
 * @return {?proto.resultstoresearch.v1.Timing}
 */
proto.resultstoresearch.v1.TestCase.prototype.getTiming = function() {
  return /** @type{?proto.resultstoresearch.v1.Timing} */ (
    jspb.Message.getWrapperField(this, common_pb.Timing, 7));
};


/**
 * @param {?proto.resultstoresearch.v1.Timing|undefined} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
*/
proto.resultstoresearch.v1.TestCase.prototype.setTiming = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.clearTiming = function() {
  return this.setTiming(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.resultstoresearch.v1.TestCase.prototype.hasTiming = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated Property properties = 8;
 * @return {!Array<!proto.resultstoresearch.v1.Property>}
 */
proto.resultstoresearch.v1.TestCase.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.Property>} */ (
    jspb.Message.getRepeatedWrapperField(this, common_pb.Property, 8));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.Property>} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
*/
proto.resultstoresearch.v1.TestCase.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.resultstoresearch.v1.Property=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.Property}
 */
proto.resultstoresearch.v1.TestCase.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.resultstoresearch.v1.Property, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * repeated File files = 9;
 * @return {!Array<!proto.resultstoresearch.v1.File>}
 */
proto.resultstoresearch.v1.TestCase.prototype.getFilesList = function() {
  return /** @type{!Array<!proto.resultstoresearch.v1.File>} */ (
    jspb.Message.getRepeatedWrapperField(this, file_pb.File, 9));
};


/**
 * @param {!Array<!proto.resultstoresearch.v1.File>} value
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
*/
proto.resultstoresearch.v1.TestCase.prototype.setFilesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.resultstoresearch.v1.File=} opt_value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.File}
 */
proto.resultstoresearch.v1.TestCase.prototype.addFiles = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.resultstoresearch.v1.File, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestCase} returns this
 */
proto.resultstoresearch.v1.TestCase.prototype.clearFilesList = function() {
  return this.setFilesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.resultstoresearch.v1.TestFailure.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resultstoresearch.v1.TestFailure.prototype.toObject = function(opt_includeInstance) {
  return proto.resultstoresearch.v1.TestFailure.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resultstoresearch.v1.TestFailure} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestFailure.toObject = function(includeInstance, msg) {
  var f, obj = {
    failureMessage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exceptionType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stackTrace: jspb.Message.getFieldWithDefault(msg, 3, ""),
    expectedList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    actualList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resultstoresearch.v1.TestFailure}
 */
proto.resultstoresearch.v1.TestFailure.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resultstoresearch.v1.TestFailure;
  return proto.resultstoresearch.v1.TestFailure.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resultstoresearch.v1.TestFailure} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resultstoresearch.v1.TestFailure}
 */
proto.resultstoresearch.v1.TestFailure.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFailureMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExceptionType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStackTrace(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addExpected(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addActual(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resultstoresearch.v1.TestFailure.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resultstoresearch.v1.TestFailure.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resultstoresearch.v1.TestFailure} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestFailure.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailureMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExceptionType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStackTrace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getExpectedList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getActualList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional string failure_message = 1;
 * @return {string}
 */
proto.resultstoresearch.v1.TestFailure.prototype.getFailureMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.setFailureMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string exception_type = 2;
 * @return {string}
 */
proto.resultstoresearch.v1.TestFailure.prototype.getExceptionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.setExceptionType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stack_trace = 3;
 * @return {string}
 */
proto.resultstoresearch.v1.TestFailure.prototype.getStackTrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.setStackTrace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string expected = 4;
 * @return {!Array<string>}
 */
proto.resultstoresearch.v1.TestFailure.prototype.getExpectedList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.setExpectedList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.addExpected = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.clearExpectedList = function() {
  return this.setExpectedList([]);
};


/**
 * repeated string actual = 5;
 * @return {!Array<string>}
 */
proto.resultstoresearch.v1.TestFailure.prototype.getActualList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.setActualList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.addActual = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.resultstoresearch.v1.TestFailure} returns this
 */
proto.resultstoresearch.v1.TestFailure.prototype.clearActualList = function() {
  return this.setActualList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.resultstoresearch.v1.TestError.prototype.toObject = function(opt_includeInstance) {
  return proto.resultstoresearch.v1.TestError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.resultstoresearch.v1.TestError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestError.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorMessage: jspb.Message.getFieldWithDefault(msg, 1, ""),
    exceptionType: jspb.Message.getFieldWithDefault(msg, 2, ""),
    stackTrace: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.resultstoresearch.v1.TestError}
 */
proto.resultstoresearch.v1.TestError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.resultstoresearch.v1.TestError;
  return proto.resultstoresearch.v1.TestError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.resultstoresearch.v1.TestError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.resultstoresearch.v1.TestError}
 */
proto.resultstoresearch.v1.TestError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setExceptionType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setStackTrace(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.resultstoresearch.v1.TestError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.resultstoresearch.v1.TestError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.resultstoresearch.v1.TestError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.resultstoresearch.v1.TestError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExceptionType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStackTrace();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string error_message = 1;
 * @return {string}
 */
proto.resultstoresearch.v1.TestError.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestError} returns this
 */
proto.resultstoresearch.v1.TestError.prototype.setErrorMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string exception_type = 2;
 * @return {string}
 */
proto.resultstoresearch.v1.TestError.prototype.getExceptionType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestError} returns this
 */
proto.resultstoresearch.v1.TestError.prototype.setExceptionType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string stack_trace = 3;
 * @return {string}
 */
proto.resultstoresearch.v1.TestError.prototype.getStackTrace = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.resultstoresearch.v1.TestError} returns this
 */
proto.resultstoresearch.v1.TestError.prototype.setStackTrace = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.resultstoresearch.v1);
